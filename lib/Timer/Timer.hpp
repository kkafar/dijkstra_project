////////////////////////////////////////////////////////////
#include <chrono>
////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////
// @brief Klasa udostępniająca interfejs do pomiaru czasu. 
////////////////////////////////////////////////////////////
class Timer
{
private:
    ////////////////////////////////////////////////////////////
    std::chrono::high_resolution_clock::time_point start, end;
    ////////////////////////////////////////////////////////////
    std::chrono::duration<double> elapsed;
    ////////////////////////////////////////////////////////////
public:
    ////////////////////////////////////////////////////////////
    // @brief Rozpoczyna pomiar czasu
    ////////////////////////////////////////////////////////////
    void Start();
    ////////////////////////////////////////////////////////////


    ////////////////////////////////////////////////////////////
    // @brief Kończy pomiar czasu
    ////////////////////////////////////////////////////////////
    void Stop();
    ////////////////////////////////////////////////////////////
    

    ////////////////////////////////////////////////////////////
    // @brief Zwraca czas który upłynął pom. wywołaniami 
    // @method Start oraz @method Stop
    ////////////////////////////////////////////////////////////
    double GetElapsedTime() const;
    ////////////////////////////////////////////////////////////
};
////////////////////////////////////////////////////////////

